{"version":3,"file":"static/js/667.421e9bfb.chunk.js","mappings":"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","sources":["model/categories.js","pages/auth/signup.js","utility/axios.config.js"],"sourcesContent":["export const categories = [\r\n  \"Web Development\",\r\n  \"Business\",\r\n  \"Finance\",\r\n  \"IT & Software\",\r\n  \"Office Productivity\",\r\n  \"Office Development\",\r\n  \"Design\",\r\n  \"Marketing\",\r\n  \"Lifestyle\",\r\n  \"Photography and Video\",\r\n  \"Music\",\r\n  \"Health & Fitness\",\r\n  \"Teaching and Academics\",\r\n  \"Leadership\",\r\n  \"Relationship\",\r\n  \"Branding\",\r\n];\r\n","import * as React from \"react\";\nimport {\n  TextField,\n  Divider,\n  Link,\n  Grid,\n  Box,\n  Typography,\n  InputAdornment,\n  IconButton,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@mui/material\";\nimport VisibilityOutlinedIcon from \"@mui/icons-material/VisibilityOutlined\";\nimport VisibilityOffOutlinedIcon from \"@mui/icons-material/VisibilityOffOutlined\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"../../utility/axios.config\";\nimport { AuthContext } from \"../../App\";\n\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { GoogleSignUp, SignUpBtn } from \"../../components/authButton\";\nimport Authpage from \"../../assets/images/authpage_bg.jpg\";\nimport { categories } from \"../../model/categories\";\n\nexport default function SignUp() {\n  const [params] = useSearchParams();\n  const navigate = useNavigate();\n  const { setUser } = React.useContext(AuthContext);\n\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [firstname, setFirstname] = React.useState();\n  const [lastname, setLastname] = React.useState();\n  const [email, setEmail] = React.useState();\n  const [userInterests, setUserInterests] = React.useState([]);\n  const [userLevel, setUserLevel] = React.useState(\"student\");\n  const [password, setPassword] = React.useState();\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!params.get(\"registerAs\")) {\n      return navigate(\"/join-as\");\n    }\n    setUserLevel(params.get(\"registerAs\"));\n  });\n\n  // clear token after 24hrs\n  const clearToken = () => {\n    setTimeout(() => {\n      localStorage.clear(\"token\");\n    }, 86400);\n  };\n\n  const inputHandler = (event, identifier) => {\n    if (identifier === \"firstname\") {\n      setFirstname(event.target.value);\n    }\n    if (identifier === \"lastname\") {\n      setLastname(event.target.value);\n    }\n    if (identifier === \"email\") {\n      setEmail(event.target.value);\n    }\n    if (identifier === \"password\") {\n      setPassword(event.target.value);\n    }\n  };\n\n  const handleCheckbox = (e, id) => {\n    const value = e.target.value;\n    let newInterests = [...userInterests];\n\n    if (newInterests.includes(value)) {\n      newInterests = newInterests.filter((int) => int !== value);\n      return setUserInterests(newInterests);\n    }\n    newInterests.push(value);\n    setUserInterests(newInterests);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Send signup request\n    const initialToastID = toast.loading(\"We're Registering you...\");\n    try {\n      // get the radio value appended to the url query\n      if (userInterests.length === 0) {\n        throw new Error(\"Please select at least one category\");\n      }\n      const formData = {\n        firstname,\n        lastname,\n        email,\n        password,\n        userLevel,\n        user_interests: userInterests,\n      };\n      const response = await axios.post(\"/signup\", JSON.stringify(formData), {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      let message;\n      if (response.data.message === \"user created\") {\n        message = \"Registration successfull\";\n      }\n\n      // save auth token to loacal storage\n      localStorage.setItem(\"token\", response.data.data.token);\n      localStorage.setItem(\"expiresIn\", new Date().getUTCHours() + 1);\n      setUser(JSON.stringify(response.data.data.newUser));\n      localStorage.setItem(\"user\", JSON.stringify(response.data.data.newUser));\n\n      toast.update(initialToastID, {\n        render: message,\n        type: \"success\",\n        isLoading: false,\n        autoClose: 2000,\n      });\n      setDialogOpen(false);\n      navigate(\"/\");\n      return clearToken();\n    } catch (err) {\n      if (err.message) {\n        let errorMessage = err.message;\n        if (err.message === \"timeout of 10000ms exceeded\") {\n          errorMessage = \"Request timeout\";\n          return toast.update(initialToastID, {\n            render: errorMessage,\n            type: \"error\",\n            isLoading: false,\n            autoClose: 2000,\n          });\n        } else if (err.message === \"Request failed with status code 400\") {\n          if (err.response.data.message) {\n            toast.update(initialToastID, {\n              render: err.response.data.message,\n              type: \"error\",\n              isLoading: false,\n              autoClose: 2000,\n            });\n          }\n        } else {\n          toast.update(initialToastID, {\n            render: err.message,\n            type: \"error\",\n            isLoading: false,\n            autoClose: 2000,\n          });\n        }\n      }\n    }\n  };\n\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Grid\n      container\n      component=\"main\"\n      sx={{\n        px: 4,\n        height: \"100vh\",\n        backgroundImage: `url(${Authpage})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor: (t) =>\n          t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <Box\n        maxWidth=\"500px\"\n        sx={{\n          mx: 1,\n          p: 5,\n          display: \"flex\",\n          flexDirection: \"column\",\n          background: \"white\",\n          borderRadius: \"0px 0px 0px 50px\",\n          // alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h4\">\n          Sign up\n        </Typography>\n        <div>\n          <Grid container spacing={1}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"standard\"\n                autoComplete=\"given-name\"\n                name=\"firstName\"\n                onChange={(event) => inputHandler(event, \"firstname\")}\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"standard\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                onChange={(event) => inputHandler(event, \"lastname\")}\n                autoComplete=\"family-name\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"standard\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={(event) => inputHandler(event, \"email\")}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"standard\"\n                required\n                fullWidth\n                name=\"password\"\n                onChange={(event) => inputHandler(event, \"password\")}\n                label=\"Password\"\n                type={showPassword ? \"text\" : \"password\"}\n                id=\"password\"\n                autoComplete=\"new-password\"\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                      >\n                        {showPassword ? (\n                          <VisibilityOutlinedIcon />\n                        ) : (\n                          <VisibilityOffOutlinedIcon />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          </Grid>\n          <SignUpBtn submit={() => setDialogOpen(true)} />\n          <Divider>\n            <Typography variant=\"body2\" sx={{ color: \"text.secondary\" }}>\n              OR\n            </Typography>\n          </Divider>\n          {/* <GoogleSignUp /> */}\n          <Grid container justifyContent=\"center\">\n            <Grid item textAlign=\"center\">\n              Already have an account?{\" \"}\n              <Link href=\"/signin\" variant=\"body2\">\n                Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </div>\n      </Box>\n      <ToastContainer />\n      <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\n        <DialogTitle>Select area of interests</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            We will use your selected areas of interest to fetch courses whose\n            category falls within your interest\n          </DialogContentText>\n          <div\n            style={{\n              width: \"100%\",\n              marginTop: 14,\n              display: \"flex\",\n              flexFlow: \"row\",\n              justifyContent: \"center\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            {categories.map((category, index) => (\n              <FormControlLabel\n                key={index}\n                checked={userInterests.includes(category)}\n                onChange={(e) => handleCheckbox(e, index)}\n                style={{ width: \"fit-content\", padding: 8 }}\n                control={<Checkbox />}\n                label={category}\n                value={category}\n              />\n            ))}\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit}>Signup</Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://academix-api.onrender.com/api/v1\",\r\n  timeout: 10000,\r\n  headers: {\r\n    Authorization: localStorage.getItem(\"token\"),\r\n  },\r\n});\r\n\r\nexport default instance;\r\n"],"names":["categories","SignUp","_useSearchParams","useSearchParams","params","_slicedToArray","navigate","useNavigate","setUser","React","AuthContext","_React$useState","_React$useState2","showPassword","setShowPassword","_React$useState3","_React$useState4","firstname","setFirstname","_React$useState5","_React$useState6","lastname","setLastname","_React$useState7","_React$useState8","email","setEmail","_React$useState9","_React$useState10","userInterests","setUserInterests","_React$useState11","_React$useState12","userLevel","setUserLevel","_React$useState13","_React$useState14","password","setPassword","_React$useState15","_React$useState16","dialogOpen","setDialogOpen","get","inputHandler","event","identifier","target","value","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","initialToastID","formData","response","message","wrap","_context","prev","next","preventDefault","toast","length","Error","user_interests","axios","JSON","stringify","headers","sent","data","localStorage","setItem","token","Date","getUTCHours","newUser","render","type","isLoading","autoClose","abrupt","setTimeout","clear","t0","stop","_x","apply","arguments","_jsxs","Grid","container","component","sx","px","height","backgroundImage","concat","Authpage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","alignItems","justifyContent","children","Box","maxWidth","mx","p","display","flexDirection","background","borderRadius","_jsx","Typography","variant","spacing","item","xs","sm","TextField","autoComplete","name","onChange","required","fullWidth","id","label","autoFocus","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","VisibilityOutlinedIcon","VisibilityOffOutlinedIcon","SignUpBtn","submit","Divider","color","textAlign","Link","href","ToastContainer","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","style","width","marginTop","flexFlow","flexWrap","category","index","FormControlLabel","checked","includes","e","newInterests","_toConsumableArray","filter","int","push","handleCheckbox","padding","control","Checkbox","DialogActions","Button","instance","baseURL","timeout","Authorization","getItem"],"sourceRoot":""}