{"version":3,"file":"static/js/592.ec1896b7.chunk.js","mappings":"uNAEMA,EAAaC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yKAS3BC,EAAaH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wEAMvBG,EAAqBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oH,SCkBrC,MA7BA,SAAoBK,GAClB,OACEC,EAAAA,EAAAA,MAACT,EAAU,CAAAU,SAAA,EACTC,EAAAA,EAAAA,KAACP,EAAU,CAAAM,UACTC,EAAAA,EAAAA,KAAA,OACEC,IAAKC,EACLC,OAAO,OACPC,MAAM,OACNC,MAAO,CAAEC,aAAc,YAG3BR,EAAAA,EAAAA,MAACH,EAAkB,CAAAI,SAAA,EACjBD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACC,QAAQ,KAAIT,SAAC,qBACzBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBACHC,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,UAAQ,EAACC,MAAOd,EAAMe,UAAWC,UAAW,SAGtDb,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACC,QAAQ,WAAUT,SAAC,uPASvC,C,qCChCA,IAAee,EAAa,C,+ECCb,SAASA,EAAaC,GAKlC,IAJDC,EAAUD,EAAVC,WACSC,EAAWF,EAApBG,QAMWC,GALPJ,EAAJK,KAAIL,EACJM,MAKIC,EAAAA,YAA4BC,IAAfP,GADfQ,SAEFC,EAA+BH,EAAAA,SAAeL,GAAYS,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAnDG,EAAUF,EAAA,GAAEG,EAAQH,EAAA,GAsB3B,MAAO,CArBOP,EAAeH,EAAaY,EAgBXN,EAAAA,aAAkB,SAAAQ,GAC1CX,GACHU,EAASC,EAEb,GAAG,IAEL,C,qFClCIC,EAAW,EAkBf,IAAMC,GAAkBV,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAM,QAAQW,YAOvB,SAASC,EAAMC,GAC5B,QAAwBZ,IAApBS,EAA+B,CACjC,IAAMI,EAAUJ,IAChB,OAAqB,MAAdG,EAAqBA,EAAaC,CAC3C,CAEA,OA9BF,SAAqBD,GACnB,IAAAV,EAAkCH,EAAAA,SAAea,GAAWT,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAArDY,EAASX,EAAA,GAAEY,EAAYZ,EAAA,GACxBa,EAAKJ,GAAcE,EAWzB,OAVAf,EAAAA,WAAgB,WACG,MAAbe,GAMFC,EAAa,OAADE,OADZT,GAAY,GAGhB,GAAG,CAACM,IACGE,CACT,CAgBSE,CAAYN,EACrB,C","sources":["pages/fullReview/fullReviewStyles.js","pages/fullReview/fullReview.js","../node_modules/@mui/material/utils/useControlled.js","../node_modules/@mui/utils/esm/useControlled.js","../node_modules/@mui/utils/esm/useId.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst ReviewWrap = styled.section`\n  padding: 14px 0;\n  display: flex;\n  align-items: flex-start;\n  margin-top: 14px;\n  border-top: 1px solid #6B6B6B;\n  gap: 32px;\n  height: fit-content;\n`;\nconst ReviewerDP = styled.div`\n  width: 70px;\n  height: 70px;\n  background-size: contain;\n`;\n\nconst ReviewDescriptions = styled.div`\n  display: flex;\n  width: 60%;\n  flex-direction: column;\n  gap: 24px;\n  justify-content: flex-start;\n`;\n\nexport { ReviewWrap, ReviewerDP, ReviewDescriptions };\n","import React from \"react\";\nimport { Rating, Typography } from \"@mui/material\";\n\nimport DP from \"../../assets/images/instructor2.png\";\nimport { ReviewWrap, ReviewerDP, ReviewDescriptions } from \"./fullReviewStyles\";\n\nfunction FullReview(props) {\n  return (\n    <ReviewWrap>\n      <ReviewerDP>\n        <img\n          src={DP}\n          height=\"100%\"\n          width=\"100%\"\n          style={{ borderRadius: \"50%\" }}\n        />\n      </ReviewerDP>\n      <ReviewDescriptions>\n        <div>\n          <Typography variant=\"h6\">Babalola Kayode</Typography>\n          <p>1 week ago</p>\n          <Rating readOnly value={props.rateValue} precision={0.5} />\n        </div>\n\n        <Typography variant=\"subtitle\">\n          I recently had the opportunity to take a course that I found\n          incredibly interesting, and I just had to share my thoughts on it.\n          This course truly exceeded my expectations and provided a fantastic\n          learning experience from start to finish.\n        </Typography>\n      </ReviewDescriptions>\n    </ReviewWrap>\n  );\n}\n\nexport default FullReview;\n","import { unstable_useControlled as useControlled } from '@mui/utils';\nexport default useControlled;","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// downstream bundlers may remove unnecessary concatenation, but won't remove toString call -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId'.toString()];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}"],"names":["ReviewWrap","styled","_templateObject","_taggedTemplateLiteral","ReviewerDP","_templateObject2","ReviewDescriptions","_templateObject3","props","_jsxs","children","_jsx","src","DP","height","width","style","borderRadius","Typography","variant","Rating","readOnly","value","rateValue","precision","useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","React","undefined","current","_React$useState","_React$useState2","_slicedToArray","valueState","setValue","newValue","globalId","maybeReactUseId","toString","useId","idOverride","reactId","defaultId","setDefaultId","id","concat","useGlobalId"],"sourceRoot":""}