{"version":3,"file":"static/js/488.d95c543e.chunk.js","mappings":"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","sources":["../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js","pages/auth/resetPassword.js","utility/axios.config.js"],"sourcesContent":["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","import * as React from \"react\";\nimport {\n  TextField,\n  Link,\n  Grid,\n  Box,\n  Typography,\n  InputAdornment,\n  IconButton,\n} from \"@mui/material\";\nimport VisibilityOutlinedIcon from \"@mui/icons-material/VisibilityOutlined\";\nimport VisibilityOffOutlinedIcon from \"@mui/icons-material/VisibilityOffOutlined\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"../../utility/axios.config\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { ResetPassBtn } from \"../../components/authButton\";\nimport Authpage from \"../../assets/images/authpage_bg.jpg\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\n\nexport default function ResetPassword() {\n  // URL parameter and query handlers...\n  const [params] = useSearchParams();\n  const navigate = useNavigate();\n\n  const [password, setPassword] = React.useState();\n  const [confirmPassword, setConfirmPassword] = React.useState();\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  React.useEffect(() => {\n    try {\n      const decoded_token = jwt_decode(params.get(\"token\"));\n      if (!decoded_token.data.userIdentityVerified) {\n        navigate(\"/wrong-page\");\n      }\n    } catch (err) {\n      navigate(\"/wrong-page\");\n    }\n  }, []);\n\n  const inputHandler = (e, id) => {\n    if (id === \"password\") {\n      setPassword(e.target.value);\n    }\n    if (id === \"confirm\") {\n      setConfirmPassword(e.target.value);\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // const data = { email, password }; // real sample...\n    const data = { email: \"chibezprince@gmail.com\", password };\n\n    const initialToastID = toast.loading(\"Resetting password...\");\n\n    if (password !== confirmPassword) {\n      return toast.update(initialToastID, {\n        render: \"Passwords not equal\",\n        type: \"error\",\n        isLoading: false,\n        autoClose: 2000,\n      });\n    }\n    // Send signup request\n    try {\n      const response = await axios.post(\n        \"/reset-password\",\n        JSON.stringify(data),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n\n      toast.update(initialToastID, {\n        render: response.data.message,\n        type: \"success\",\n        isLoading: false,\n        autoClose: 1000,\n      });\n\n      setTimeout(() => {\n        navigate(\"/reset-password-successfull\");\n      }, 1000);\n    } catch (err) {\n      toast.update(initialToastID, {\n        render: err.response.data.message || err.message,\n        type: \"error\",\n        isLoading: false,\n        autoClose: 2000,\n      });\n    }\n  };\n\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Grid\n      container\n      component=\"main\"\n      sx={{\n        px: 3,\n        height: \"100vh\",\n        backgroundImage: `url(${Authpage})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor: (t) =>\n          t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <Grid\n        md={5}\n        maxWidth=\"500px\"\n        sx={{\n          // mx: 1,\n          px: 5,\n          py: 6,\n          display: \"flex\",\n          flexDirection: \"column\",\n          background: \"white\",\n          borderRadius: \"0px 0px 0px 50px\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Reset Password\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"standard\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Enter a new password\"\n                onChange={(e) => inputHandler(e, \"password\")}\n                type={showPassword ? \"text\" : \"password\"}\n                id=\"password\"\n                autoComplete=\"new-password\"\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                      >\n                        {showPassword ? (\n                          <VisibilityOutlinedIcon />\n                        ) : (\n                          <VisibilityOffOutlinedIcon />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"standard\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Confirm new password\"\n                onChange={(e) => inputHandler(e, \"confirm\")}\n                type={showPassword ? \"text\" : \"password\"}\n                id=\"new-password\"\n                autoComplete=\"new-password\"\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                      >\n                        {showPassword ? (\n                          <VisibilityOutlinedIcon />\n                        ) : (\n                          <VisibilityOffOutlinedIcon />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          </Grid>\n          <ResetPassBtn />\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              Back to{\" \"}\n              <Link href=\"#\" variant=\"body2\">\n                Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n      <ToastContainer />\n    </Grid>\n  );\n}\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://academix-api.onrender.com/api/v1\",\r\n  timeout: 10000,\r\n  headers: {\r\n    Authorization: localStorage.getItem(\"token\"),\r\n  },\r\n});\r\n\r\nexport default instance;\r\n"],"names":["e","this","message","prototype","Error","name","r","window","atob","bind","t","String","replace","length","n","o","a","i","c","charAt","fromCharCode","indexOf","decodeURIComponent","charCodeAt","toString","toUpperCase","header","JSON","parse","split","ResetPassword","_useSearchParams","useSearchParams","params","_slicedToArray","navigate","useNavigate","_React$useState","React","_React$useState2","password","setPassword","_React$useState3","_React$useState4","confirmPassword","setConfirmPassword","_React$useState5","_React$useState6","showPassword","setShowPassword","jwt_decode","get","data","userIdentityVerified","err","inputHandler","id","target","value","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","initialToastID","response","wrap","_context","prev","next","preventDefault","email","toast","abrupt","render","type","isLoading","autoClose","axios","stringify","headers","sent","setTimeout","t0","stop","_x","apply","arguments","handleClickShowPassword","show","handleMouseDownPassword","_jsxs","Grid","container","component","sx","px","height","backgroundImage","concat","Authpage","backgroundRepeat","backgroundColor","palette","mode","grey","backgroundSize","backgroundPosition","alignItems","justifyContent","children","md","maxWidth","py","display","flexDirection","background","borderRadius","_jsx","Typography","variant","Box","noValidate","onSubmit","mt","spacing","item","xs","TextField","required","fullWidth","label","onChange","autoComplete","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","VisibilityOutlinedIcon","VisibilityOffOutlinedIcon","ResetPassBtn","Link","href","ToastContainer","instance","baseURL","timeout","Authorization","localStorage","getItem"],"sourceRoot":""}