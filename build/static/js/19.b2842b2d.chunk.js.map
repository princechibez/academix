{"version":3,"file":"static/js/19.b2842b2d.chunk.js","mappings":"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","sources":["pages/auth/forgotPassword.js","utility/axios.config.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import * as React from \"react\";\nimport { TextField, Link, Grid, Box, Typography } from \"@mui/material\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"../../utility/axios.config\";\n\nimport { ForgotPassBtn } from \"../../components/authButton\";\nimport Authpage from \"../../assets/images/authpage_bg.jpg\";\n\nexport default function ForgotPassword() {\n  const [email, setemail] = React.useState();\n\n  const inputHandler = (event) => {\n    setemail(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = { email };\n\n    const initialToastID = toast.loading(\"Loggin in...\");\n    // Send signup request\n    try {\n      const response = await axios.post(\"/request-password-reset\", JSON.stringify(data), {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      toast.update(initialToastID, {\n        render: response.data.message,\n        type: \"success\",\n        isLoading: false,\n        autoClose: 2000,\n      });\n    } catch (err) {\n      toast.update(initialToastID, {\n        render: err.response.data.message,\n        type: \"error\",\n        isLoading: false,\n        autoClose: 2000,\n      });\n    }\n  };\n\n  return (\n    <Grid\n      container\n      component=\"main\"\n      sx={{\n        px: 4,\n        height: \"100vh\",\n        backgroundImage: `url(${Authpage})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor: (t) =>\n          t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      <Grid\n        md={5}\n        xs={{ mx: 0 }}\n        maxWidth=\"500px\"\n        sx={{\n          mx: 1,\n          p: 5,\n          display: \"flex\",\n          flexDirection: \"column\",\n          background: \"white\",\n          borderRadius: \"0px 0px 0px 50px\",\n          justifyContent: \"cemter\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Forgot Password\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"standard\"\n                required\n                fullWidth\n                id=\"email\"\n                onChange={inputHandler}\n                label=\"Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n          </Grid>\n          <Grid container justifyContent=\"flex-end\" sx={{ mt: 1 }}></Grid>\n          <ForgotPassBtn onClick={handleSubmit} />\n          <Grid container justifyContent=\"center\">\n            <Grid item textAlign=\"center\" pb={2}>\n              Back to{\" \"}\n              <Link href=\"/signin\" variant=\"body2\">\n                Signin\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n      <ToastContainer />\n    </Grid>\n  );\n}\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://academix-api.onrender.com/api/v1\",\r\n  timeout: 10000,\r\n  headers: {\r\n    Authorization: localStorage.getItem(\"token\"),\r\n  },\r\n});\r\n\r\nexport default instance;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["ForgotPassword","_React$useState","React","_React$useState2","_slicedToArray","email","setemail","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","data","initialToastID","response","wrap","_context","prev","next","preventDefault","toast","axios","JSON","stringify","headers","sent","render","message","type","isLoading","autoClose","t0","stop","_x","apply","arguments","_jsxs","Grid","container","component","sx","px","height","backgroundImage","concat","Authpage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","alignItems","justifyContent","children","md","xs","mx","maxWidth","p","display","flexDirection","background","borderRadius","_jsx","Typography","variant","Box","noValidate","onSubmit","mt","spacing","item","TextField","required","fullWidth","id","onChange","target","value","label","name","autoComplete","ForgotPassBtn","onClick","textAlign","pb","Link","href","ToastContainer","instance","baseURL","timeout","Authorization","localStorage","getItem","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","ownerState","transformedColor","color","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","overridesResolver","props","styles","root","capitalize","underline","button","_extends","textDecoration","textDecorationColor","getTextDecoration","_defineProperty","position","WebkitTapHighlightColor","outline","border","margin","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","inProps","ref","useThemeProps","className","_props$color","_props$component","onBlur","onFocus","TypographyClasses","_props$underline","_props$variant","other","_objectWithoutPropertiesLoose","_useIsFocusVisible","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","current","_toConsumableArray","Object","keys","includes","Array","isArray"],"sourceRoot":""}